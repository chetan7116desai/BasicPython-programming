# -*- coding: utf-8 -*-
"""python programming 03

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1D34EwrsFKrbx35kB24ujmFCo6adJ_9bk

TRY CATCH
"""

try:
  x = 10/0
  print(x)
except ZeroDivisionError as err:
  print(err)  
except ValueError as vrr:
  print(vrr)



"""File handling"""

!pwd

mkdir chetan

cd chetan/

!pwd

ls

"""Remember you can read only the files which are in the directory"""

file01 = open('google colab tricks.txt','r')
file01.readlines()

#writing in file

file01 = open('google colab tricks.txt','a')

file01

file01.write("i have written inn the file")
file01.close()

file01 = open('google colab tricks.txt','r')

file01.readlines()
file01.close()

file01 = open('newfile.txt','w')

file01 = open('one.html','w')
file01.writelines("<h1> html </h1>")

file01 = open('one.html','r')
file01.readlines()

file01.close()



"""Classes and Objects"""

class Student:

  def __init__(self,name,major,gpa,is_on_probation):
    self.name = name
    self.major = major
    self.gpa = gpa
    self.is_on_probation = is_on_probation


s1 = Student("chetan","datascience",3.7,False)
print(s1.major)



"""making a multiple choice questionform"""

class Question:
   def __init__(self, prompt,answer):
     self.prompt = prompt
     self.answer = answer


 
 
 
 question_prompts=[
       "what is your name:\n(a)chetan\n(b)deepak\n(c)kiran\n(d)akash\n",
       
       "what is your age:\n(a)21\n(b)22\n(c)23\n(d)24\n",
       
       "what is your occupation:\n(a)doc\n(b)engineer\n(c)architect\n(d)None\n"            

 ]

 que = [
        Question(question_prompts[0],"a"),
        
        Question(question_prompts[1],"c"),
        
        Question(question_prompts[2],"b"),

 ]

def ask_me(que):
   score=0
   
   for q in que:
     
     answer = input(q.prompt)
     if answer == q.answer:
       score+=1

   print("score :" +str(score)+".")

ask_me(que)

#using function in classes

class Student:

  def __init__(self,name,major,gpa):
    self.name = name
    self.major = major
    self.gpa = gpa

  def honor_exist(self):
    if self.gpa > 3.5:
     # print("scholar student ")
     return True
    else:
      return False

s1 = Student("chetan","datascience",3.4)
s2 = Student("deepak","datascience",3.9)

print(s1.honor_exist())
print(s2.honor_exist())

"""Inheritance"""

